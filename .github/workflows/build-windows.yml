---
name: Build - Windows

on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - main

env:
  CMAKE_BUILD_PARALLEL_LEVEL: 2
  MAKEFLAGS: '-j 2'

jobs:
  job:
    name: ${{ matrix.os }}-${{ matrix.buildtype }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-2022]
        buildtype: [windows-release, windows-release-asan, windows-debug, windows-release-static-lib]
        include:
          - os: windows-2022
            triplet: x64-windows
            packages: >
              sccache

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: CCache
        uses: hendrikmuhs/ccache-action@v1.2
        with:
          max-size: "1G"
          variant: "sccache"
          key: ccache-${{ matrix.os }}-${{ matrix.buildtype }}
          restore-keys: |
            ccache-${{ matrix.os }}

      - name: Install Python
        uses: actions/setup-python@v1
        with:
          python-version: '3.10'

      - name: Get latest Conan
        run: pip install conan

      - name: Get latest CMake and ninja
        uses: lukka/get-cmake@latest

      - name: Run Conan Install
        run: |
          mkdir build
          cd build
          mkdir ${{ matrix.buildtype }}
          cd ${{ matrix.buildtype }}
          conan install -s compiler.libcxx=libstdc++11 .. --build=missing

      - name: Run CMake
        uses: lukka/run-cmake@v10
        with:
          configurePreset: ${{ matrix.buildtype }}
          buildPreset: ${{ matrix.buildtype }}

      - name: Create and Upload Artifact (exe)
        uses: actions/upload-artifact@v3
        with:
          name: otclient-${{ matrix.buildtype }}-${{ github.sha }}
          path: |
            ${{ github.workspace }}/otclient.exe

      - name: Create and Upload Artifact (dlls)
        uses: actions/upload-artifact@v3
        with:
          name: otclient-${{ matrix.buildtype }}-${{ github.sha }}
          path: |
            ${{ github.workspace }}/*.dll
